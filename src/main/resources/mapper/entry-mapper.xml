<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rakbow.kureakurusu.dao.EntryMapper">

    <sql id="selectFields">
        id, name, name_zh, name_en, category, alias, images, detail, description, added_time, edited_time, remark, status
    </sql>

    <sql id="insertFields">
        name, name_zh, name_en, category, alias, images, detail, description, added_time, edited_time, remark, status
    </sql>

    <select id="getEntry" resultType="Entry">
        select
        <include refid="selectFields"></include>
        from entry
        where id = #{id}
    </select>

    <select id="getEntries" resultType="Entry">
        select
        <include refid="selectFields"></include>
        from entry
        <where>
            id in
            <if test="ids != null and ids.size() != 0">
                <foreach item="item" index="index" collection="ids" open="("
                         close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getAll" resultType="Entry">
        select
        <include refid="selectFields"></include>
        from entry
    </select>

    <insert id="addEntry" useGeneratedKeys="true" keyProperty="id">
        insert into entry (<include refid="insertFields"></include>)
        values (#{name}, #{nameZh}, #{nameEn}, #{category}, #{alias},
        #{images}, #{detail}, #{description}, #{addedTime}, #{editedTime}, #{remark}, #{status})
    </insert>

    <update id="updateEntry" parameterType="Entry" keyProperty="id">
        update entry
        set
        name = #{entry.name}, name_zh = #{entry.nameZh}, name_en = #{entry.nameEn}, category = #{entry.category},
        alias = #{entry.alias}, detail = #{entry.detail}, edited_time = #{entry.editedTime}, remark = #{entry.remark}
        where id = #{entry.id}
    </update>

    <delete id="deleteEntry">
        delete
        from entry
        where id = #{id}
    </delete>

    <select id="getEntryByCategory" resultType="Entry">
        select
        <include refid="selectFields"></include>
        from entry
        where category = #{entry.category}
    </select>

    <select id="getEntriesByFilter" resultType="Entry">
        select
        <include refid="selectFields"></include>
        from entry
        <where>
            <if test="name != null and name != '' ">
                and name like concat('%', #{name}, '%')
            </if>
            <if test="nameZh != null and nameZh != '' ">
                and name_zh like concat('%', #{nameZh}, '%')
            </if>
            <if test="nameEn != null and nameEn != '' ">
                and name_en like concat('%', #{nameEn}, '%')
            </if>
            <if test="category != 100 ">
                and category = #{category}
            </if>
        </where>
        <if test="sortField == 'id'">
            <if test="sortOrder == 1">
                order by id asc
            </if>
            <if test="sortOrder == -1">
                order by id desc
            </if>
        </if>
        <if test="sortField == null">
            order by id desc
        </if>
        <if test="row != 0">
            limit #{first}, #{row}
        </if>
    </select>

    <select id="getEntriesRowsByFilter" resultType="int">
        select count(id)
        from entry
        <where>
            <if test="name != null and name != '' ">
                and name like concat('%', #{name}, '%')
            </if>
            <if test="nameZh != null and nameZh != '' ">
                and name_zh like concat('%', #{nameZh}, '%')
            </if>
            <if test="nameEn != null and nameEn != '' ">
                and name_en like concat('%', #{nameEn}, '%')
            </if>
            <if test="category != 100 ">
                and category = #{category}
            </if>
        </where>
    </select>

</mapper>